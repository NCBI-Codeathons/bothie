import sys, os

# load stuff from config file
SAMPLES=config.get('metagenome_files', [])
QUERY=config.get('query_file', '')
ksize = config.get('ksize', 'unset')

# don't change these :)
OUTPUT_DIR=config.get('output_dir', 'outputs')
RESULTS_DIR=os.path.join(OUTPUT_DIR, 'results')
SAMPLE_PREP=os.path.join(OUTPUT_DIR, 'prep.sample')
QUERY_PREP=os.path.join(OUTPUT_DIR, 'prep.query')

###
### check configuration
###

print("Checking configuration...", file=sys.stderr)

do_fail = False

SAMPLES = [ x.strip() for x in SAMPLES ]
SAMPLES = [ x for x in SAMPLES if x ]

if not SAMPLES:
    print("No files in 'metagenome_files' in the config?", file=sys.stderr)
    do_fail = True

if not QUERY:
    print("No 'query' in the config?", file=sys.stderr)
    do_fail = True

try:
    ksize = int(ksize)
except ValueError:
    print(f"Invalid ksize {repr(ksize)}", file=sys.stderr)
    do_fail = True

for sample in SAMPLES:
    if not os.path.exists(sample):
        print(f"metagenome file '{sample}' does not exist.", file=sys.stderr)
        do_fail = True

if not os.path.exists(QUERY):
    print(f"query file '{QUERY}' does not exist.", file=sys.stderr)
    do_fail = True

if do_fail:
    print('Snakefile config checks FAILED.', file=sys.stderr)
    sys.exit(-1)

print("Configuration PASSED!", file=sys.stderr)

###
### actual rules to run something
###

rule prepare_sample:
    output: directory(SAMPLE_PREP)
    conda: "../conf/env/mash2.yml"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       # seems like we leave the sample/target in fasta/fastq etc. format
       # instead of sketching it, we'll just copy it with a new name
       cp {SAMPLES} {output}/sample.sig
    """

rule prepare_query:
    output: directory(QUERY_PREP)
    conda: "../conf/env/mash2.yml"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       # seems like mash sketch FORCES a .msh extension on the end of your output string...
       # not cool
       mash sketch -k {ksize} {QUERY} -o {output}/query.sig
    """

rule do_query:
    input:
        # this is annoying: mash seems to REQUIRE that the query have a .msh extension...
        # not cool. initially I was renaming the forced query.sig.msh file to query.sig,
        # but it just doesn't seem to like it.
        query = f"{QUERY_PREP}/query.sig.msh",
        sample = f"{SAMPLE_PREP}/sample.sig",
    output: directory(RESULTS_DIR)
    conda: "../conf/env/mash2.yml"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       # doesn't seem like mash screen supports output direction
       mash screen {input.query} {input.sample} > {output}/results.csv
       # if we want to print the results still
       cat {output}/results.csv
    """

rule install_software:
    conda: "../conf/env/mash2.yml"
    shell: """
       mash --version
    """
