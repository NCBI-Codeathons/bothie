# load stuff from config
SAMPLES=config.get('metagenome_files', [])
QUERY=config.get('query_file', '')
ksize = config.get('ksize', 'unset')

try:
    ksize = int(ksize)
except ValueError:
    print(f"Invalid ksize {repr(ksize)}", file=sys.stderr)
    raise

# this sets LOG_DIR, RESULTS_DIR, SAMPLE_PREP, and QUERY_PREP
include: '../common.snakefile'

###
### actual rules to run something
###

rule prepare_sample:
    output: directory(SAMPLE_PREP)
    conda: "../conf/env/sourmash4.yml"
    log: f"{LOG_DIR}/prepare_sample.log"
    benchmark: f"{LOG_DIR}/prepare_sample.benchmark"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       sourmash sketch translate {SAMPLES} -o {output}/sample.sig 2> {log}
    """

rule prepare_query:
    output: directory(QUERY_PREP)
    conda: "../conf/env/sourmash4.yml"
    params:
        name = os.path.basename(QUERY)
    log: f"{LOG_DIR}/prepare_query.log"
    benchmark: f"{LOG_DIR}/prepare_query.benchmark"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       sourmash sketch translate {QUERY} -o {output}/query.sig 2> {log}
    """

rule execute_query_command:
    input:
        query = f"{QUERY_PREP}/query.sig",
        sample = f"{SAMPLE_PREP}/sample.sig",
    output: directory(RESULTS_DIR)
    conda: "../conf/env/sourmash4.yml"
    log: f"{LOG_DIR}/execute_query.log"
    benchmark: f"{LOG_DIR}/execute_query.benchmark"
    shell: """
       rm -fr {output}
       mkdir -p {output}
       sourmash search --containment {input.query} {input.sample} -o {output}/results.csv  2> {log}
    """

rule do_query:
    message: "Run query and evaluate if it found it, or not."
    input: dir=RESULTS_DIR
    benchmark: f"{LOG_DIR}/do_query.benchmark"
    run:
        with open(input.dir + '/results.csv', "rt") as fp:
            lines = fp.readlines()

            # victory condition for sourmash - two lines in file :)
            found = False
            if len(lines) == 2:
                found = True
        with open(input.dir + '/RESULT', 'wt') as fp:
            if found:
                fp.write('1\n')
            else:
                fp.write('0\n')

rule install_software:
    conda: "../conf/env/sourmash4.yml"
    log: f"{LOG_DIR}/install_software.log"
    benchmark: f"{LOG_DIR}/install_software.benchmark"
    shell: """
       sourmash --version 2> {log}
    """
